name: Terraform Destroy Triggered

on:
  workflow_dispatch:
    inputs:
      approved:
        description: "Approval granted to destroy infrastructure"
        required: true
      infra_dir:
        description: "Comma-separated list of Terraform module paths"
        required: true
      environment_name:
        description: "Target environment to use in workflow"
        required: true

jobs:
  aws-infra-destroyer:
    name: Destroy Terraform Modules
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - uses: hashicorp/setup-terraform@v3
        name: Setup Terraform
        with:
          terraform_version: 1.2.6
          terraform_wrapper: false

      - name: Terraform Destroy
        run: |
          echo "Modules to destroy: ${{ github.event.inputs.infra_dir }}"

          IFS=',' read -r -a infra_dirs <<< "${{ github.event.inputs.infra_dir }}"

          for infra_dir in "${infra_dirs[@]}"; do
              module=$(basename "$infra_dir")
              echo "\n Destroying module: $infra_dir"

              cd "infras/terraform/$module" || {
                echo "Module not found: infras/terraform/$module"
                exit 1
              }

              terraform init -backend-config="../../$infra_dir/backend.tfvars"
              terraform destroy -auto-approve -var-file="../../$infra_dir/terraform.tfvars"

              cd - > /dev/null
          done

      - name: TF_Destroy Complete
        run: echo "Terraform destroy completed for all specified modules."
